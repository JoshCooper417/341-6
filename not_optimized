%Object = type { %_Object_vtable*, i8* }
%_Object_vtable = type { {  }*, i8* (%Object*)* }
declare i32* @oat_malloc(i32)
declare { i32, [ 0 x i32 ] }* @oat_alloc_array(i32)
declare void @oat_array_bounds_check(i32, i32)
declare void @oat_abort(i32)
declare void @print_bool(i1)
declare void @print_int(i32)
declare void @print_string(i8*)
declare i32 @length_of_string(i8*)
declare i8* @string_cat(i8*, i8*)
declare i8* @string_of_int(i32)
declare { i32, [ 0 x i32 ] }* @array_of_string(i8*)
declare i8* @string_of_array({ i32, [ 0 x i32 ] }*)
@_const_str2.str. = private unnamed_addr constant [ 7 x i8 ] c "Object\00", align 4
@_const_str2 = alias bitcast([ 7 x i8 ]* @_const_str2.str. to i8*)@_Object_vtable1 = private constant %_Object_vtable {{  }* null, i8* (%Object*)* @_Object_get_name}, align 4
define void @oat_init (){
__fresh3:
  ret void
}


define i32 @program (i32 %argc8, { i32, [ 0 x i8* ] }* %argv6){
__fresh2:
  %argc_slot9 = alloca i32
  store i32 %argc8, i32* %argc_slot9
  %argv_slot7 = alloca { i32, [ 0 x i8* ] }*
  store { i32, [ 0 x i8* ] }* %argv6, { i32, [ 0 x i8* ] }** %argv_slot7
  %bop10 = add i32 1, 1
  %bop11 = add i32 %bop10, 1
  %bop12 = add i32 %bop11, 1
  %bop13 = add i32 %bop12, 1
  %bop14 = add i32 %bop13, 1
  %bop15 = add i32 %bop14, 1
  %bop16 = add i32 %bop15, 1
  %bop17 = add i32 %bop16, 1
  %bop18 = add i32 %bop17, 1
  %bop19 = add i32 %bop18, 1
  %bop20 = add i32 %bop19, 1
  %bop21 = add i32 %bop20, 1
  %bop22 = add i32 %bop21, 1
  %bop23 = add i32 %bop22, 1
  %bop24 = add i32 %bop23, 1
  %bop25 = add i32 %bop24, 1
  %bop26 = add i32 %bop25, 1
  %bop27 = add i32 %bop26, 1
  %bop28 = add i32 %bop27, 1
  %bop29 = add i32 %bop28, 1
  %bop30 = add i32 %bop29, 1
  %bop31 = add i32 %bop30, 1
  %bop32 = add i32 %bop31, 1
  %bop33 = add i32 %bop32, 1
  %bop34 = add i32 %bop33, 1
  %bop35 = add i32 %bop34, 1
  %bop36 = add i32 %bop35, 1
  %bop37 = add i32 %bop36, 1
  %bop38 = add i32 %bop37, 1
  %bop39 = add i32 %bop38, 1
  %bop40 = add i32 %bop39, 1
  %bop41 = add i32 %bop40, 1
  %bop42 = add i32 %bop41, 1
  %bop43 = add i32 %bop42, 1
  %bop44 = add i32 %bop43, 1
  %bop45 = add i32 %bop44, 1
  %bop46 = add i32 %bop45, 1
  %bop47 = add i32 %bop46, 1
  %bop48 = add i32 %bop47, 1
  %bop49 = add i32 %bop48, 1
  %bop50 = add i32 %bop49, 1
  %bop51 = add i32 %bop50, 1
  %bop52 = add i32 %bop51, 1
  %bop53 = add i32 %bop52, 1
  %bop54 = add i32 %bop53, 1
  %bop55 = add i32 %bop54, 1
  %bop56 = add i32 %bop55, 1
  %bop57 = add i32 %bop56, 1
  %bop58 = add i32 %bop57, 1
  %bop59 = add i32 %bop58, 1
  %bop60 = add i32 %bop59, 1
  %bop61 = add i32 %bop60, 1
  %bop62 = add i32 %bop61, 1
  %bop63 = add i32 %bop62, 1
  %bop64 = add i32 %bop63, 1
  %bop65 = add i32 %bop64, 1
  %bop66 = add i32 %bop65, 1
  %bop67 = add i32 %bop66, 1
  %bop68 = add i32 %bop67, 1
  %bop69 = add i32 %bop68, 1
  %bop70 = add i32 %bop69, 1
  %bop71 = add i32 %bop70, 1
  %bop72 = add i32 %bop71, 1
  %vdecl_slot73 = alloca i32
  store i32 %bop72, i32* %vdecl_slot73
  %lhs_or_call74 = load i32* %vdecl_slot73
  ret i32 %lhs_or_call74
}


define i8* @_Object_get_name (%Object* %_this1){
__fresh1:
  %path4 = getelementptr %Object* %_this1, i32 0, i32 1
  %lhs_or_call5 = load i8** %path4
  ret i8* %lhs_or_call5
}


define %Object* @_Object_ctor (%Object* %_this1){
__fresh0:
  %path2 = getelementptr %Object* %_this1, i32 0, i32 1
  store i8* @_const_str2, i8** %path2
  %vt_slot3 = getelementptr %Object* %_this1, i32 0, i32 0
  store %_Object_vtable* @_Object_vtable1, %_Object_vtable** %vt_slot3
  ret %Object* %_this1
}


