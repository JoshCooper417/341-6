### Starting build.
# Target: main.ml.depends, tags: { extension:ml, file:main.ml, ocaml, ocamldep, quiet }
/usr/local/bin/ocamldep.opt -modules main.ml > main.ml.depends # cached
# Target: driver.ml.depends, tags: { extension:ml, file:driver.ml, ocaml, ocamldep, quiet }
/usr/local/bin/ocamldep.opt -modules driver.ml > driver.ml.depends # cached
# Target: assert.mli.depends, tags: { extension:mli, file:assert.mli, ocaml, ocamldep, quiet }
/usr/local/bin/ocamldep.opt -modules assert.mli > assert.mli.depends # cached
# Target: assert.cmi, tags: { byte, compile, extension:mli, file:assert.mli, interf, ocaml, quiet }
/usr/local/bin/ocamlc.opt -c -o assert.cmi assert.mli # cached
# Target: ast.mli.depends, tags: { extension:mli, file:ast.mli, ocaml, ocamldep, quiet }
/usr/local/bin/ocamldep.opt -modules ast.mli > ast.mli.depends # cached
# Target: ast.cmi, tags: { byte, compile, extension:mli, file:ast.mli, interf, ocaml, quiet }
/usr/local/bin/ocamlc.opt -c -o ast.cmi ast.mli # cached
# Target: astlib.mli.depends, tags: { extension:mli, file:astlib.mli, ocaml, ocamldep, quiet }
/usr/local/bin/ocamldep.opt -modules astlib.mli > astlib.mli.depends # cached
# Target: range.mli.depends, tags: { extension:mli, file:range.mli, ocaml, ocamldep, quiet }
/usr/local/bin/ocamldep.opt -modules range.mli > range.mli.depends # cached
# Target: range.cmi, tags: { byte, compile, extension:mli, file:range.mli, interf, ocaml, quiet }
/usr/local/bin/ocamlc.opt -c -o range.cmi range.mli # cached
# Target: astlib.cmi, tags: { byte, compile, extension:mli, file:astlib.mli, interf, ocaml, quiet }
/usr/local/bin/ocamlc.opt -c -o astlib.cmi astlib.mli # cached
# Target: cunit.mli.depends, tags: { extension:mli, file:cunit.mli, ocaml, ocamldep, quiet }
/usr/local/bin/ocamldep.opt -modules cunit.mli > cunit.mli.depends # cached
# Target: x86.mli.depends, tags: { extension:mli, file:x86.mli, ocaml, ocamldep, quiet }
/usr/local/bin/ocamldep.opt -modules x86.mli > x86.mli.depends # cached
# Target: x86.cmi, tags: { byte, compile, extension:mli, file:x86.mli, interf, ocaml, quiet }
/usr/local/bin/ocamlc.opt -c -o x86.cmi x86.mli # cached
# Target: cunit.cmi, tags: { byte, compile, extension:mli, file:cunit.mli, interf, ocaml, quiet }
/usr/local/bin/ocamlc.opt -c -o cunit.cmi cunit.mli # cached
# Target: gradedtests.ml.depends, tags: { extension:ml, file:gradedtests.ml, ocaml, ocamldep, quiet }
/usr/local/bin/ocamldep.opt -modules gradedtests.ml > gradedtests.ml.depends # cached
# Target: LibUtil.mli.depends, tags: { extension:mli, file:LibUtil.mli, ocaml, ocamldep, quiet }
/usr/local/bin/ocamldep.opt -modules LibUtil.mli > LibUtil.mli.depends # cached
# Target: LibUtil.cmi, tags: { byte, compile, extension:mli, file:LibUtil.mli, interf, ocaml, quiet }
/usr/local/bin/ocamlc.opt -c -o LibUtil.cmi LibUtil.mli # cached
# Target: lllib.mli.depends, tags: { extension:mli, file:lllib.mli, ocaml, ocamldep, quiet }
/usr/local/bin/ocamldep.opt -modules lllib.mli > lllib.mli.depends # cached
# Target: ll.mli.depends, tags: { extension:mli, file:ll.mli, ocaml, ocamldep, quiet }
/usr/local/bin/ocamldep.opt -modules ll.mli > ll.mli.depends # cached
# Target: ll.cmi, tags: { byte, compile, extension:mli, file:ll.mli, interf, ocaml, quiet }
/usr/local/bin/ocamlc.opt -c -o ll.cmi ll.mli # cached
# Target: lllib.cmi, tags: { byte, compile, extension:mli, file:lllib.mli, interf, ocaml, quiet }
/usr/local/bin/ocamlc.opt -c -o lllib.cmi lllib.mli # cached
# Target: occ.mli.depends, tags: { extension:mli, file:occ.mli, ocaml, ocamldep, quiet }
/usr/local/bin/ocamldep.opt -modules occ.mli > occ.mli.depends # cached
# Target: occ.cmi, tags: { byte, compile, extension:mli, file:occ.mli, interf, ocaml, quiet }
/usr/local/bin/ocamlc.opt -c -o occ.cmi occ.mli # cached
# Target: opt.ml.depends, tags: { extension:ml, file:opt.ml, ocaml, ocamldep, quiet }
/usr/local/bin/ocamldep.opt -modules opt.ml > opt.ml.depends
# Target: phase1.mli.depends, tags: { extension:mli, file:phase1.mli, ocaml, ocamldep, quiet }
/usr/local/bin/ocamldep.opt -modules phase1.mli > phase1.mli.depends # cached
# Target: phase1.cmi, tags: { byte, compile, extension:mli, file:phase1.mli, interf, ocaml, quiet }
/usr/local/bin/ocamlc.opt -c -o phase1.cmi phase1.mli # cached
# Target: platform.mli.depends, tags: { extension:mli, file:platform.mli, ocaml, ocamldep, quiet }
/usr/local/bin/ocamldep.opt -modules platform.mli > platform.mli.depends # cached
# Target: platform.cmi, tags: { byte, compile, extension:mli, file:platform.mli, interf, ocaml, quiet }
/usr/local/bin/ocamlc.opt -c -o platform.cmi platform.mli # cached
# Target: tc.mli.depends, tags: { extension:mli, file:tc.mli, ocaml, ocamldep, quiet }
/usr/local/bin/ocamldep.opt -modules tc.mli > tc.mli.depends # cached
# Target: tc.cmi, tags: { byte, compile, extension:mli, file:tc.mli, interf, ocaml, quiet }
/usr/local/bin/ocamlc.opt -c -o tc.cmi tc.mli # cached
# Target: opt.cmo, tags: { byte, compile, extension:ml, file:opt.ml, implem, ocaml, quiet }
/usr/local/bin/ocamlc.opt -c -o opt.cmo opt.ml
+ /usr/local/bin/ocamlc.opt -c -o opt.cmo opt.ml
File "opt.ml", line 119, characters 16-29:
Warning 26: unused variable var_entry_opt.
File "opt.ml", line 181, characters 6-13:
Warning 26: unused variable context.
File "opt.ml", line 70, characters 72-74:
Error: This expression has type Ast.n = int32
       but an expression was expected of type int
Command exited with code 2.
# Compilation unsuccessful.
